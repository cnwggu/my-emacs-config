;; Object objs/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "objs/"
  :tables (list 
   (semanticdb-table "Makefile"
    :major-mode 'makefile-gmake-mode
    :tags 
        '( ("CC" variable (:default-value ("cc")) nil [2 10])
            ("CFLAGS" variable (:default-value ("-pipe" "-O" "-W" "-Wall" "-Wpointer-arith" "-Wno-unused-parameter" "-g")) nil [10 81])
            ("CPP" variable (:default-value ("cc" "-E")) nil [81 93])
            ("LINK" variable (:default-value ("$(CC)")) nil [93 106])
            ("ALL_INCS" variable (:default-value ("-I" "src/core" "-I" "src/event" "-I" "src/event/modules" "-I" "src/os/unix" "-I" "/home/work/git/nginx_tcp_proxy_module//modules" "-I" "/home/work/git/nginx_tcp_proxy_module//parsers" "-I" "/home/work/git/nginx_tcp_proxy_module/" "-I" "objs" "-I" "src/http" "-I" "src/http/modules" "-I" "src/mail")) nil [108 404])
            ("CORE_DEPS" variable (:default-value ("src/core/nginx.h" "src/core/ngx_config.h" "src/core/ngx_core.h" "src/core/ngx_log.h" "src/core/ngx_palloc.h" "src/core/ngx_array.h" "src/core/ngx_list.h" "src/core/ngx_hash.h" "src/core/ngx_buf.h" "src/core/ngx_queue.h" "src/core/ngx_string.h" "src/core/ngx_parse.h" "src/core/ngx_inet.h" "src/core/ngx_file.h" "src/core/ngx_crc.h" "src/core/ngx_crc32.h" "src/core/ngx_murmurhash.h" "src/core/ngx_md5.h" "src/core/ngx_sha1.h" "src/core/ngx_rbtree.h" "src/core/ngx_radix_tree.h" "src/core/ngx_slab.h" "src/core/ngx_times.h" "src/core/ngx_shmtx.h" "src/core/ngx_connection.h" "src/core/ngx_cycle.h" "src/core/ngx_conf_file.h" "src/core/ngx_resolver.h" "src/core/ngx_open_file_cache.h" "src/core/ngx_crypt.h" "src/event/ngx_event.h" "src/event/ngx_event_timer.h" "src/event/ngx_event_posted.h" "src/event/ngx_event_busy_lock.h" "src/event/ngx_event_connect.h" "src/event/ngx_event_pipe.h" "src/os/unix/ngx_time.h" "src/os/unix/ngx_errno.h" "src/os/unix/ngx_alloc.h" "src/os/unix/ngx_files.h" "src/os/unix/ngx_channel.h" "src/os/unix/ngx_shmem.h" "src/os/unix/ngx_process.h" "src/os/unix/ngx_setaffinity.h" "src/os/unix/ngx_setproctitle.h" "src/os/unix/ngx_atomic.h" "src/os/unix/ngx_gcc_atomic_x86.h" "src/os/unix/ngx_thread.h" "src/os/unix/ngx_socket.h" "src/os/unix/ngx_os.h" "src/os/unix/ngx_user.h" "src/os/unix/ngx_process_cycle.h" "src/os/unix/ngx_linux_config.h" "src/os/unix/ngx_linux.h" "src/event/ngx_event_openssl.h" "objs/ngx_auto_config.h")) nil [406 1922])
            ("CORE_INCS" variable (:default-value ("-I" "src/core" "-I" "src/event" "-I" "src/event/modules" "-I" "src/os/unix" "-I" "/home/work/git/nginx_tcp_proxy_module//modules" "-I" "/home/work/git/nginx_tcp_proxy_module//parsers" "-I" "/home/work/git/nginx_tcp_proxy_module/" "-I" "objs")) nil [1924 2168])
            ("HTTP_DEPS" variable (:default-value ("src/http/ngx_http.h" "src/http/ngx_http_request.h" "src/http/ngx_http_config.h" "src/http/ngx_http_core_module.h" "src/http/ngx_http_cache.h" "src/http/ngx_http_variables.h" "src/http/ngx_http_script.h" "src/http/ngx_http_upstream.h" "src/http/ngx_http_upstream_round_robin.h" "src/http/ngx_http_busy_lock.h" "src/http/modules/ngx_http_ssi_filter_module.h")) nil [2170 2548])
            ("HTTP_INCS" variable (:default-value ("-I" "src/http" "-I" "src/http/modules")) nil [2550 2597])
            ("ADDON_DEPS" variable (:default-value ("$(CORE_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp.h" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_session.h" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_upstream.h" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_upstream_check.h" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_upstream_round_robin.h" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_upstream_keepalive.h" "/home/work/git/nginx_tcp_proxy_module//parsers/parser.h" "/home/work/git/nginx_tcp_proxy_module//parsers/http_request_parser.h" "/home/work/git/nginx_tcp_proxy_module//parsers/http_response_parser.h" "/home/work/git/nginx_tcp_proxy_module//parsers/smtp_response_parser.h" "/home/work/git/nginx_tcp_proxy_module//modules/ngx_tcp_ssl_module.h" "$(HTTP_DEPS)")) nil [2599 3338])
            ("objs/nginx" function (:arguments ("objs/src/core/nginx.o" "objs/src/core/ngx_log.o" "objs/src/core/ngx_palloc.o" "objs/src/core/ngx_array.o" "objs/src/core/ngx_list.o" "objs/src/core/ngx_hash.o" "objs/src/core/ngx_buf.o" "objs/src/core/ngx_queue.o" "objs/src/core/ngx_output_chain.o" "objs/src/core/ngx_string.o" "objs/src/core/ngx_parse.o" "objs/src/core/ngx_inet.o" "objs/src/core/ngx_file.o" "objs/src/core/ngx_crc32.o" "objs/src/core/ngx_murmurhash.o" "objs/src/core/ngx_md5.o" "objs/src/core/ngx_rbtree.o" "objs/src/core/ngx_radix_tree.o" "objs/src/core/ngx_slab.o" "objs/src/core/ngx_times.o" "objs/src/core/ngx_shmtx.o" "objs/src/core/ngx_connection.o" "objs/src/core/ngx_cycle.o" "objs/src/core/ngx_spinlock.o" "objs/src/core/ngx_cpuinfo.o" "objs/src/core/ngx_conf_file.o" "objs/src/core/ngx_resolver.o" "objs/src/core/ngx_open_file_cache.o" "objs/src/core/ngx_crypt.o" "objs/src/event/ngx_event.o" "objs/src/event/ngx_event_timer.o" "objs/src/event/ngx_event_posted.o" "objs/src/event/ngx_event_busy_lock.o" "objs/src/event/ngx_event_accept.o" "objs/src/event/ngx_event_connect.o" "objs/src/event/ngx_event_pipe.o" "objs/src/os/unix/ngx_time.o" "objs/src/os/unix/ngx_errno.o" "objs/src/os/unix/ngx_alloc.o" "objs/src/os/unix/ngx_files.o" "objs/src/os/unix/ngx_socket.o" "objs/src/os/unix/ngx_recv.o" "objs/src/os/unix/ngx_readv_chain.o" "objs/src/os/unix/ngx_udp_recv.o" "objs/src/os/unix/ngx_send.o" "objs/src/os/unix/ngx_writev_chain.o" "objs/src/os/unix/ngx_channel.o" "objs/src/os/unix/ngx_shmem.o" "objs/src/os/unix/ngx_process.o" "objs/src/os/unix/ngx_daemon.o" "objs/src/os/unix/ngx_setaffinity.o" "objs/src/os/unix/ngx_setproctitle.o" "objs/src/os/unix/ngx_posix_init.o" "objs/src/os/unix/ngx_user.o" "objs/src/os/unix/ngx_process_cycle.o" "objs/src/os/unix/ngx_linux_init.o" "objs/src/event/modules/ngx_rtsig_module.o" "objs/src/event/modules/ngx_epoll_module.o" "objs/src/os/unix/ngx_linux_sendfile_chain.o" "objs/src/event/ngx_event_openssl.o" "objs/src/event/ngx_event_openssl_stapling.o" "objs/src/http/ngx_http.o" "objs/src/http/ngx_http_core_module.o" "objs/src/http/ngx_http_special_response.o" "objs/src/http/ngx_http_request.o" "objs/src/http/ngx_http_parse.o" "objs/src/http/ngx_http_header_filter_module.o" "objs/src/http/ngx_http_write_filter_module.o" "objs/src/http/ngx_http_copy_filter_module.o" "objs/src/http/modules/ngx_http_log_module.o" "objs/src/http/ngx_http_request_body.o" "objs/src/http/ngx_http_variables.o" "objs/src/http/ngx_http_script.o" "objs/src/http/ngx_http_upstream.o" "objs/src/http/ngx_http_upstream_round_robin.o" "objs/src/http/ngx_http_parse_time.o" "objs/src/http/modules/ngx_http_static_module.o" "objs/src/http/modules/ngx_http_index_module.o" "objs/src/http/modules/ngx_http_chunked_filter_module.o" "objs/src/http/modules/ngx_http_range_filter_module.o" "objs/src/http/modules/ngx_http_headers_filter_module.o" "objs/src/http/modules/ngx_http_not_modified_filter_module.o" "objs/src/http/ngx_http_busy_lock.o" "objs/src/http/ngx_http_file_cache.o" "objs/src/http/modules/ngx_http_gzip_filter_module.o" "objs/src/http/ngx_http_postpone_filter_module.o" "objs/src/http/modules/ngx_http_ssi_filter_module.o" "objs/src/http/modules/ngx_http_charset_filter_module.o" "objs/src/http/modules/ngx_http_userid_filter_module.o" "objs/src/http/modules/ngx_http_autoindex_module.o" "objs/src/http/modules/ngx_http_auth_basic_module.o" "objs/src/http/modules/ngx_http_access_module.o" "objs/src/http/modules/ngx_http_limit_conn_module.o" "objs/src/http/modules/ngx_http_limit_req_module.o" "objs/src/http/modules/ngx_http_geo_module.o" "objs/src/http/modules/ngx_http_map_module.o" "objs/src/http/modules/ngx_http_split_clients_module.o" "objs/src/http/modules/ngx_http_referer_module.o" "objs/src/http/modules/ngx_http_proxy_module.o" "objs/src/http/modules/ngx_http_fastcgi_module.o" "objs/src/http/modules/ngx_http_uwsgi_module.o" "objs/src/http/modules/ngx_http_scgi_module.o" "objs/src/http/modules/ngx_http_memcached_module.o" "objs/src/http/modules/ngx_http_empty_gif_module.o" "objs/src/http/modules/ngx_http_browser_module.o" "objs/src/http/modules/ngx_http_upstream_ip_hash_module.o" "objs/src/http/modules/ngx_http_upstream_least_conn_module.o" "objs/src/http/modules/ngx_http_upstream_keepalive_module.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp_core_module.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp_session.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp_access.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp_log.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp_upstream.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp_upstream_round_robin.o" "objs/addon/modules/ngx_tcp_generic_proxy_module.o" "objs/addon/modules/ngx_tcp_websocket_proxy_module.o" "objs/addon/modules/ngx_tcp_upstream_ip_hash_module.o" "objs/addon/modules/ngx_tcp_upstream_busyness_module.o" "objs/addon/modules/ngx_tcp_fastcgi_module.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp_upstream_check.o" "objs/addon/nginx_tcp_proxy_module/ngx_tcp_upstream_keepalive.o" "objs/addon/parsers/http_request_parser.o" "objs/addon/parsers/http_response_parser.o" "objs/addon/parsers/smtp_response_parser.o" "objs/addon/modules/ngx_tcp_ssl_module.o" "objs/ngx_modules.o")) nil [3340 8675])
            ("objs/ngx_modules.o" function (:arguments ("$(CORE_DEPS)" "objs/ngx_modules.c")) nil [14074 14211])
            ("objs/src/core/nginx.o" function (:arguments ("$(CORE_DEPS)" "src/core/nginx.c")) nil [14213 14352])
            ("objs/src/core/ngx_log.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_log.c")) nil [14354 14501])
            ("objs/src/core/ngx_palloc.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_palloc.c")) nil [14503 14662])
            ("objs/src/core/ngx_array.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_array.c")) nil [14664 14819])
            ("objs/src/core/ngx_list.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_list.c")) nil [14821 14972])
            ("objs/src/core/ngx_hash.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_hash.c")) nil [14974 15125])
            ("objs/src/core/ngx_buf.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_buf.c")) nil [15127 15274])
            ("objs/src/core/ngx_queue.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_queue.c")) nil [15276 15431])
            ("objs/src/core/ngx_output_chain.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_output_chain.c")) nil [15433 15616])
            ("objs/src/core/ngx_string.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_string.c")) nil [15618 15777])
            ("objs/src/core/ngx_parse.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_parse.c")) nil [15779 15934])
            ("objs/src/core/ngx_inet.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_inet.c")) nil [15936 16087])
            ("objs/src/core/ngx_file.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_file.c")) nil [16089 16240])
            ("objs/src/core/ngx_crc32.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_crc32.c")) nil [16242 16397])
            ("objs/src/core/ngx_murmurhash.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_murmurhash.c")) nil [16399 16574])
            ("objs/src/core/ngx_md5.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_md5.c")) nil [16576 16723])
            ("objs/src/core/ngx_rbtree.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_rbtree.c")) nil [16725 16884])
            ("objs/src/core/ngx_radix_tree.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_radix_tree.c")) nil [16886 17061])
            ("objs/src/core/ngx_slab.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_slab.c")) nil [17063 17214])
            ("objs/src/core/ngx_times.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_times.c")) nil [17216 17371])
            ("objs/src/core/ngx_shmtx.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_shmtx.c")) nil [17373 17528])
            ("objs/src/core/ngx_connection.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_connection.c")) nil [17530 17705])
            ("objs/src/core/ngx_cycle.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_cycle.c")) nil [17707 17862])
            ("objs/src/core/ngx_spinlock.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_spinlock.c")) nil [17864 18031])
            ("objs/src/core/ngx_cpuinfo.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_cpuinfo.c")) nil [18033 18196])
            ("objs/src/core/ngx_conf_file.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_conf_file.c")) nil [18198 18369])
            ("objs/src/core/ngx_resolver.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_resolver.c")) nil [18371 18538])
            ("objs/src/core/ngx_open_file_cache.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_open_file_cache.c")) nil [18540 18735])
            ("objs/src/core/ngx_crypt.o" function (:arguments ("$(CORE_DEPS)" "src/core/ngx_crypt.c")) nil [18737 18892])
            ("objs/src/event/ngx_event.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event.c")) nil [18894 19053])
            ("objs/src/event/ngx_event_timer.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event_timer.c")) nil [19055 19238])
            ("objs/src/event/ngx_event_posted.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event_posted.c")) nil [19240 19427])
            ("objs/src/event/ngx_event_busy_lock.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event_busy_lock.c")) nil [19429 19628])
            ("objs/src/event/ngx_event_accept.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event_accept.c")) nil [19630 19817])
            ("objs/src/event/ngx_event_connect.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event_connect.c")) nil [19819 20010])
            ("objs/src/event/ngx_event_pipe.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event_pipe.c")) nil [20012 20191])
            ("objs/src/os/unix/ngx_time.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_time.c")) nil [20193 20356])
            ("objs/src/os/unix/ngx_errno.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_errno.c")) nil [20358 20525])
            ("objs/src/os/unix/ngx_alloc.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_alloc.c")) nil [20527 20694])
            ("objs/src/os/unix/ngx_files.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_files.c")) nil [20696 20863])
            ("objs/src/os/unix/ngx_socket.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_socket.c")) nil [20865 21036])
            ("objs/src/os/unix/ngx_recv.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_recv.c")) nil [21038 21201])
            ("objs/src/os/unix/ngx_readv_chain.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_readv_chain.c")) nil [21203 21394])
            ("objs/src/os/unix/ngx_udp_recv.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_udp_recv.c")) nil [21396 21575])
            ("objs/src/os/unix/ngx_send.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_send.c")) nil [21577 21740])
            ("objs/src/os/unix/ngx_writev_chain.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_writev_chain.c")) nil [21742 21937])
            ("objs/src/os/unix/ngx_channel.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_channel.c")) nil [21939 22114])
            ("objs/src/os/unix/ngx_shmem.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_shmem.c")) nil [22116 22283])
            ("objs/src/os/unix/ngx_process.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_process.c")) nil [22285 22460])
            ("objs/src/os/unix/ngx_daemon.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_daemon.c")) nil [22462 22633])
            ("objs/src/os/unix/ngx_setaffinity.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_setaffinity.c")) nil [22635 22826])
            ("objs/src/os/unix/ngx_setproctitle.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_setproctitle.c")) nil [22828 23023])
            ("objs/src/os/unix/ngx_posix_init.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_posix_init.c")) nil [23025 23212])
            ("objs/src/os/unix/ngx_user.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_user.c")) nil [23214 23377])
            ("objs/src/os/unix/ngx_process_cycle.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_process_cycle.c")) nil [23379 23578])
            ("objs/src/os/unix/ngx_linux_init.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_linux_init.c")) nil [23580 23767])
            ("objs/src/event/modules/ngx_rtsig_module.o" function (:arguments ("$(CORE_DEPS)" "src/event/modules/ngx_rtsig_module.c")) nil [23769 23988])
            ("objs/src/event/modules/ngx_epoll_module.o" function (:arguments ("$(CORE_DEPS)" "src/event/modules/ngx_epoll_module.c")) nil [23990 24209])
            ("objs/src/os/unix/ngx_linux_sendfile_chain.o" function (:arguments ("$(CORE_DEPS)" "src/os/unix/ngx_linux_sendfile_chain.c")) nil [24211 24438])
            ("objs/src/event/ngx_event_openssl.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event_openssl.c")) nil [24440 24631])
            ("objs/src/event/ngx_event_openssl_stapling.o" function (:arguments ("$(CORE_DEPS)" "src/event/ngx_event_openssl_stapling.c")) nil [24633 24860])
            ("objs/src/http/ngx_http.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http.c")) nil [24862 25039])
            ("objs/src/http/ngx_http_core_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_core_module.c")) nil [25041 25266])
            ("objs/src/http/ngx_http_special_response.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_special_response.c")) nil [25268 25513])
            ("objs/src/http/ngx_http_request.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_request.c")) nil [25515 25724])
            ("objs/src/http/ngx_http_parse.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_parse.c")) nil [25726 25927])
            ("objs/src/http/ngx_http_header_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_header_filter_module.c")) nil [25929 26190])
            ("objs/src/http/ngx_http_write_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_write_filter_module.c")) nil [26192 26449])
            ("objs/src/http/ngx_http_copy_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_copy_filter_module.c")) nil [26451 26704])
            ("objs/src/http/modules/ngx_http_log_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_log_module.c")) nil [26706 26959])
            ("objs/src/http/ngx_http_request_body.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_request_body.c")) nil [26961 27190])
            ("objs/src/http/ngx_http_variables.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_variables.c")) nil [27192 27409])
            ("objs/src/http/ngx_http_script.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_script.c")) nil [27411 27616])
            ("objs/src/http/ngx_http_upstream.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_upstream.c")) nil [27618 27831])
            ("objs/src/http/ngx_http_upstream_round_robin.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_upstream_round_robin.c")) nil [27833 28094])
            ("objs/src/http/ngx_http_parse_time.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_parse_time.c")) nil [28096 28317])
            ("objs/src/http/modules/ngx_http_static_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_static_module.c")) nil [28319 28584])
            ("objs/src/http/modules/ngx_http_index_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_index_module.c")) nil [28586 28847])
            ("objs/src/http/modules/ngx_http_chunked_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_chunked_filter_module.c")) nil [28849 29146])
            ("objs/src/http/modules/ngx_http_range_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_range_filter_module.c")) nil [29148 29437])
            ("objs/src/http/modules/ngx_http_headers_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_headers_filter_module.c")) nil [29439 29736])
            ("objs/src/http/modules/ngx_http_not_modified_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_not_modified_filter_module.c")) nil [29738 30055])
            ("objs/src/http/ngx_http_busy_lock.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_busy_lock.c")) nil [30057 30274])
            ("objs/src/http/ngx_http_file_cache.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_file_cache.c")) nil [30276 30497])
            ("objs/src/http/modules/ngx_http_gzip_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_gzip_filter_module.c")) nil [30499 30784])
            ("objs/src/http/ngx_http_postpone_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/ngx_http_postpone_filter_module.c")) nil [30786 31055])
            ("objs/src/http/modules/ngx_http_ssi_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_ssi_filter_module.c")) nil [31057 31338])
            ("objs/src/http/modules/ngx_http_charset_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_charset_filter_module.c")) nil [31340 31637])
            ("objs/src/http/modules/ngx_http_userid_filter_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_userid_filter_module.c")) nil [31639 31932])
            ("objs/src/http/modules/ngx_http_autoindex_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_autoindex_module.c")) nil [31934 32211])
            ("objs/src/http/modules/ngx_http_auth_basic_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_auth_basic_module.c")) nil [32213 32494])
            ("objs/src/http/modules/ngx_http_access_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_access_module.c")) nil [32496 32761])
            ("objs/src/http/modules/ngx_http_limit_conn_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_limit_conn_module.c")) nil [32763 33044])
            ("objs/src/http/modules/ngx_http_limit_req_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_limit_req_module.c")) nil [33046 33323])
            ("objs/src/http/modules/ngx_http_geo_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_geo_module.c")) nil [33325 33578])
            ("objs/src/http/modules/ngx_http_map_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_map_module.c")) nil [33580 33833])
            ("objs/src/http/modules/ngx_http_split_clients_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_split_clients_module.c")) nil [33835 34128])
            ("objs/src/http/modules/ngx_http_referer_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_referer_module.c")) nil [34130 34399])
            ("objs/src/http/modules/ngx_http_proxy_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_proxy_module.c")) nil [34401 34662])
            ("objs/src/http/modules/ngx_http_fastcgi_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_fastcgi_module.c")) nil [34664 34933])
            ("objs/src/http/modules/ngx_http_uwsgi_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_uwsgi_module.c")) nil [34935 35196])
            ("objs/src/http/modules/ngx_http_scgi_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_scgi_module.c")) nil [35198 35455])
            ("objs/src/http/modules/ngx_http_memcached_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_memcached_module.c")) nil [35457 35734])
            ("objs/src/http/modules/ngx_http_empty_gif_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_empty_gif_module.c")) nil [35736 36013])
            ("objs/src/http/modules/ngx_http_browser_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_browser_module.c")) nil [36015 36284])
            ("objs/src/http/modules/ngx_http_upstream_ip_hash_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_upstream_ip_hash_module.c")) nil [36286 36591])
            ("objs/src/http/modules/ngx_http_upstream_least_conn_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_upstream_least_conn_module.c")) nil [36593 36910])
            ("objs/src/http/modules/ngx_http_upstream_keepalive_module.o" function (:arguments ("$(CORE_DEPS)" "$(HTTP_DEPS)" "src/http/modules/ngx_http_upstream_keepalive_module.c")) nil [36912 37225])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp.c")) nil [37227 37475])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp_core_module.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_core_module.c")) nil [37477 37773])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp_session.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_session.c")) nil [37775 38055])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp_access.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_access.c")) nil [38057 38333])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp_log.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_log.c")) nil [38335 38599])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp_upstream.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_upstream.c")) nil [38601 38885])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp_upstream_round_robin.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_upstream_round_robin.c")) nil [38887 39219])
            ("objs/addon/modules/ngx_tcp_generic_proxy_module.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//modules/ngx_tcp_generic_proxy_module.c")) nil [39221 39539])
            ("objs/addon/modules/ngx_tcp_websocket_proxy_module.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//modules/ngx_tcp_websocket_proxy_module.c")) nil [39541 39867])
            ("objs/addon/modules/ngx_tcp_upstream_ip_hash_module.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//modules/ngx_tcp_upstream_ip_hash_module.c")) nil [39869 40199])
            ("objs/addon/modules/ngx_tcp_upstream_busyness_module.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//modules/ngx_tcp_upstream_busyness_module.c")) nil [40201 40535])
            ("objs/addon/modules/ngx_tcp_fastcgi_module.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//modules/ngx_tcp_fastcgi_module.c")) nil [40537 40831])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp_upstream_check.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_upstream_check.c")) nil [40833 41141])
            ("objs/addon/nginx_tcp_proxy_module/ngx_tcp_upstream_keepalive.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//ngx_tcp_upstream_keepalive.c")) nil [41143 41467])
            ("objs/addon/parsers/http_request_parser.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//parsers/http_request_parser.c")) nil [41469 41751])
            ("objs/addon/parsers/http_response_parser.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//parsers/http_response_parser.c")) nil [41753 42039])
            ("objs/addon/parsers/smtp_response_parser.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//parsers/smtp_response_parser.c")) nil [42041 42327])
            ("objs/addon/modules/ngx_tcp_ssl_module.o" function (:arguments ("$(ADDON_DEPS)" "/home/work/git/nginx_tcp_proxy_module//modules/ngx_tcp_ssl_module.c")) nil [42329 42607])
            ("manpage" function (:arguments ("objs/nginx.8")) nil [42609 42631])
            ("objs/nginx.8" function (:arguments ("man/nginx.8" "objs/ngx_auto_config.h")) nil [42632 42924])
            ("install" function (:arguments ("objs/nginx")) nil [42925 43027]))          
    :file "Makefile"
    :pointmax 45100
    :fsize 45099
    :lastmodtime '(21105 12263 0 0)
    :unmatched-syntax '((shell-command 45010 . 45099) (bol 45009 . 45009) (shell-command 44921 . 45007) (bol 44920 . 44920) (shell-command 44829 . 44918) (bol 44828 . 44828) (shell-command 44737 . 44826) (bol 44736 . 44736) (shell-command 44663 . 44734) (bol 44662 . 44662) (shell-command 44540 . 44661) (bol 44539 . 44539) (shell-command 44462 . 44537) (bol 44461 . 44461) (shell-command 44348 . 44460) (bol 44347 . 44347) (shell-command 44268 . 44345) (bol 44267 . 44267) (shell-command 44152 . 44266) (bol 44151 . 44151) (shell-command 44074 . 44149) (bol 44073 . 44073) (shell-command 43958 . 44072) (bol 43957 . 43957) (shell-command 43874 . 43955) (bol 43873 . 43873) (shell-command 43754 . 43872) (bol 43753 . 43753) (shell-command 43680 . 43751) (bol 43679 . 43679) (shell-command 43568 . 43678) (bol 43567 . 43567) (shell-command 43516 . 43565) (bol 43515 . 43515) (shell-command 43465 . 43514) (bol 43464 . 43464) (shell-command 43414 . 43463) (bol 43413 . 43413) (shell-command 43322 . 43411) (bol 43321 . 43321) (shell-command 43266 . 43319) (bol 43265 . 43265) (shell-command 43120 . 43264) (bol 43119 . 43119) (shell-command 43029 . 43118) (bol 43028 . 43028) (shell-command 14071 . 14071) (bol 14070 . 14070) (shell-command 8677 . 14069) (bol 8676 . 8676))
    )
   )
  :file "!home!work!download!nginx-1.5.6!objs!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
