;; Object unit/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "unit/"
  :tables (list 
   (semanticdb-table "Makefile.am"
    :major-mode 'makefile-automake-mode
    :tags 
        '( ("SUBDIRS" variable (:default-value ("lua")) nil [795 807])
            ("TESTS" variable (:default-value ("check_sql_tokenizer" "check_mysqld_proto" "check_plugin" "check_loadscript" "check_chassis_log" "t_network_socket" "t_network_queue" "t_network_address" "t_network_backend" "t_network_injection" "t_network_mysqld_packet" "t_network_mysqld_type" "t_network_mysqld_masterinfo" "t_chassis_timings" "t_chassis_shutdown_hooks" "t_chassis_frontend" "check_chassis_filemode" "check_chassis_path")) nil [808 1222])
            ("check_PROGRAMS" variable (:default-value ("$(TESTS)")) nil [1223 1247])
            ("t_chassis_shutdown_hooks_SOURCES" variable (:default-value ("t_chassis_shutdown_hooks.c" "$(top_srcdir)/src/chassis-shutdown-hooks.c" "$(top_srcdir)/src/glib-ext.c")) nil [1248 1388])
            ("t_chassis_shutdown_hooks_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "-I$(top_srcdir)" "$(MYSQL_CFLAGS)")) nil [1389 1499])
            ("t_chassis_shutdown_hooks_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GTHREAD_LIBS)")) nil [1500 1562])
            ("t_chassis_frontend_SOURCES" variable (:default-value ("t_chassis_frontend.c")) nil [1564 1615])
            ("t_chassis_frontend_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "-I$(top_srcdir)" "$(MYSQL_CFLAGS)")) nil [1616 1720])
            ("t_chassis_frontend_LDADD" variable (:default-value ("$(top_builddir)/src/libmysql-chassis.la")) nil [1721 1788])
            ("t_chassis_frontend_LDFLAGS" variable (:default-value ("-L$(top_builddir)/src/.libs")) nil [1867 1924])
            ("check_chassis_filemode_SOURCES" variable (:default-value ("check_chassis_filemode.c" "$(top_srcdir)/src/chassis-filemode.c")) nil [1926 2024])
            ("check_chassis_filemode_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "-I$(top_srcdir)" "$(MYSQL_CFLAGS)")) nil [2025 2133])
            ("check_chassis_filemode_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GTHREAD_LIBS)")) nil [2134 2194])
            ("check_sql_tokenizer_SOURCES" variable (:default-value ("check_sql_tokenizer.c" "$(top_srcdir)/lib/sql-tokenizer.l" "$(top_srcdir)/lib/sql-tokenizer-tokens.c" "$(top_builddir)/lib/sql-tokenizer-keywords.c" "$(top_srcdir)/src/glib-ext.c")) nil [2195 2409])
            ("check_sql_tokenizer_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/lib/" "$(GLIB_CFLAGS)" "-I$(top_srcdir)/src/")) nil [2410 2498])
            ("check_sql_tokenizer_LDADD" variable (:default-value ("$(GLIB_LIBS)")) nil [2498 2542])
            ("DISTCLEANFILES" variable (:default-value ("sql-tokenizer.c")) nil [2543 2579])
            ("check_mysqld_proto_SOURCES" variable (:default-value ("check_mysqld_proto.c" "$(top_srcdir)/src/network-mysqld-binlog.c" "$(top_srcdir)/src/network-mysqld-proto.c" "$(top_srcdir)/src/glib-ext.c")) nil [2580 2755])
            ("check_mysqld_proto_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)")) nil [2756 2838])
            ("check_mysqld_proto_LDADD" variable (:default-value ("$(GLIB_LIBS)")) nil [2838 2881])
            ("t_network_mysqld_type_SOURCES" variable (:default-value ("t_network_mysqld_type.c" "$(top_srcdir)/src/network_mysqld_type.c" "$(top_srcdir)/src/glib-ext.c")) nil [2882 3017])
            ("t_network_mysqld_type_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(LUA_CFLAGS)")) nil [3018 3117])
            ("t_network_mysqld_type_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(LUA_LIBS)" "$(EVENT_LIBS)")) nil [3117 3189])
            ("t_network_mysqld_packet_SOURCES" variable (:default-value ("t_network_mysqld_packet.c" "$(top_srcdir)/src/network-mysqld-packet.c" "$(top_srcdir)/src/network-mysqld-proto.c" "$(top_srcdir)/src/network_mysqld_type.c" "$(top_srcdir)/src/network_mysqld_proto_binary.c" "$(top_srcdir)/src/network-queue.c" "$(top_srcdir)/src/network-socket.c" "$(top_srcdir)/src/network-address.c" "$(top_srcdir)/src/glib-ext.c")) nil [3191 3584])
            ("t_network_mysqld_packet_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(LUA_CFLAGS)")) nil [3585 3686])
            ("t_network_mysqld_packet_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(LUA_LIBS)" "$(EVENT_LIBS)")) nil [3686 3760])
            ("t_chassis_timings_SOURCES" variable (:default-value ("t_chassis_timings.c" "$(top_srcdir)/src/chassis-timings.c" "$(top_srcdir)/src/glib-ext.c" "$(top_srcdir)/src/my_rdtsc.c")) nil [3761 3917])
            ("t_chassis_timings_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)")) nil [3918 3984])
            ("t_chassis_timings_LDADD" variable (:default-value ("$(GLIB_LIBS)")) nil [3984 4026])
            ("t_chassis_timings_CPPFLAGS" variable (:default-value ("${top_srcdir}/src/my_timer_cycles.il")) nil [4048 4118])
            ("check_plugin_SOURCES" variable (:default-value ("check_plugin.c" "$(top_srcdir)/src/chassis-plugin.c")) nil [4128 4202])
            ("check_plugin_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)")) nil [4202 4296])
            ("check_plugin_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)")) nil [4296 4349])
            ("check_chassis_log_SOURCES" variable (:default-value ("check_chassis_log.c")) nil [4350 4400])
            ("check_chassis_log_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)")) nil [4400 4499])
            ("check_chassis_log_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(top_builddir)/src/libmysql-chassis.la")) nil [4499 4597])
            ("check_loadscript_SOURCES" variable (:default-value ("check_loadscript.c" "$(top_srcdir)/src/lua-scope.c" "$(top_srcdir)/src/lua-load-factory.c" "$(top_srcdir)/src/chassis-stats.c")) nil [4598 4746])
            ("check_loadscript_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(LUA_CFLAGS)" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)")) nil [4746 4858])
            ("check_loadscript_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(GTHREAD_LIBS)" "$(LUA_LIBS)")) nil [4858 4943])
            ("t_network_socket_SOURCES" variable (:default-value ("t_network_socket.c" "$(top_srcdir)/src/glib-ext.c" "$(top_srcdir)/src/network-mysqld-proto.c" "$(top_srcdir)/src/network-mysqld-packet.c" "$(top_srcdir)/src/network_mysqld_type.c" "$(top_srcdir)/src/network_mysqld_proto_binary.c" "$(top_srcdir)/src/network-address.c" "$(top_srcdir)/src/network-queue.c" "$(top_srcdir)/src/network-socket.c")) nil [4944 5323])
            ("t_network_socket_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)" "$(EVENT_CFLAGS)" "$(LUA_CFLAGS)")) nil [5324 5452])
            ("t_network_socket_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(GTHREAD_LIBS)" "$(EVENT_LIBS)" "$(LUA_LIBS)")) nil [5452 5551])
            ("t_network_queue_SOURCES" variable (:default-value ("t_network_queue.c" "$(top_srcdir)/src/glib-ext.c" "$(top_srcdir)/src/network-queue.c")) nil [5552 5669])
            ("t_network_queue_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)" "$(EVENT_CFLAGS)" "$(LUA_CFLAGS)")) nil [5670 5797])
            ("t_network_queue_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(GTHREAD_LIBS)" "$(EVENT_LIBS)" "$(LUA_LIBS)")) nil [5797 5895])
            ("t_network_address_SOURCES" variable (:default-value ("t_network_address.c" "$(top_srcdir)/src/glib-ext.c" "$(top_srcdir)/src/network-address.c")) nil [5896 6020])
            ("t_network_address_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)" "$(EVENT_CFLAGS)" "$(LUA_CFLAGS)")) nil [6021 6150])
            ("t_network_address_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(GTHREAD_LIBS)" "$(EVENT_LIBS)" "$(LUA_LIBS)")) nil [6150 6250])
            ("check_chassis_path_SOURCES" variable (:default-value ("check_chassis_path.c" "$(top_srcdir)/src/chassis-log.c" "$(top_srcdir)/src/chassis-mainloop.c" "$(top_srcdir)/src/chassis-shutdown-hooks.c" "$(top_srcdir)/src/chassis-event-thread.c" "$(top_srcdir)/src/chassis-plugin.c" "$(top_srcdir)/src/chassis-path.c" "$(top_srcdir)/src/chassis-stats.c" "$(top_srcdir)/src/glib-ext.c" "$(top_srcdir)/src/my_rdtsc.c" "$(top_srcdir)/src/chassis-timings.c")) nil [6252 6684])
            ("check_chassis_path_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)")) nil [6684 6783])
            ("check_chassis_path_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(EVENT_LIBS)" "$(GTHREAD_LIBS)")) nil [6783 6872])
            ("check_chassis_path_CPPFLAGS" variable (:default-value ("${top_srcdir}/src/my_timer_cycles.il")) nil [6894 6965])
            ("t_network_backend_SOURCES" variable (:default-value ("t_network_backend.c" "$(top_srcdir)/src/chassis-timings.c" "$(top_srcdir)/src/glib-ext.c" "$(top_srcdir)/src/network-backend.c" "$(top_srcdir)/src/network-mysqld-proto.c" "$(top_srcdir)/src/network-mysqld-packet.c" "$(top_srcdir)/src/network_mysqld_type.c" "$(top_srcdir)/src/network_mysqld_proto_binary.c" "$(top_srcdir)/src/network-conn-pool.c" "$(top_srcdir)/src/network-address.c" "$(top_srcdir)/src/network-queue.c" "$(top_srcdir)/src/network-socket.c" "$(top_srcdir)/src/my_rdtsc.c")) nil [6973 7505])
            ("t_network_backend_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)" "$(EVENT_CFLAGS)" "$(LUA_CFLAGS)")) nil [7506 7635])
            ("t_network_backend_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(GTHREAD_LIBS)" "$(EVENT_LIBS)" "$(LUA_LIBS)")) nil [7635 7735])
            ("t_network_backend_CPPFLAGS" variable (:default-value ("${top_srcdir}/src/my_timer_cycles.il")) nil [7757 7827])
            ("t_network_mysqld_masterinfo_SOURCES" variable (:default-value ("t_network_mysqld_masterinfo.c" "$(top_srcdir)/src/glib-ext.c" "$(top_srcdir)/src/network-mysqld-proto.c" "$(top_srcdir)/src/network-mysqld-masterinfo.c")) nil [7834 8032])
            ("t_network_mysqld_masterinfo_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)" "$(EVENT_CFLAGS)")) nil [8033 8158])
            ("t_network_mysqld_masterinfo_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(GTHREAD_LIBS)" "$(EVENT_LIBS)")) nil [8158 8256])
            ("t_network_injection_SOURCES" variable (:default-value ("t_network_injection.c" "$(top_srcdir)/src/glib-ext.c" "$(top_srcdir)/src/network-mysqld-proto.c" "$(top_srcdir)/src/network-mysqld-packet.c" "$(top_srcdir)/src/network_mysqld_type.c" "$(top_srcdir)/src/network_mysqld_proto_binary.c" "$(top_srcdir)/src/network-injection.c" "$(top_srcdir)/src/my_rdtsc.c" "$(top_srcdir)/src/chassis-timings.c")) nil [8257 8640])
            ("t_network_injection_CPPFLAGS" variable (:default-value ("-I$(top_srcdir)/src/" "$(GLIB_CFLAGS)" "$(MYSQL_CFLAGS)" "$(GMODULE_CFLAGS)" "$(EVENT_CFLAGS)" "$(LUA_CFLAGS)")) nil [8641 8772])
            ("t_network_injection_LDADD" variable (:default-value ("$(GLIB_LIBS)" "$(GMODULE_LIBS)" "$(GTHREAD_LIBS)" "$(EVENT_LIBS)" "$(LUA_LIBS)")) nil [8772 8874])
            ("t_network_injection_CPPFLAGS" variable (:default-value ("${top_srcdir}/src/my_timer_cycles.il")) nil [8896 8968])
            ("EXTRA_DIST" variable (:default-value ("CMakeLists.txt")) nil [8975 9003])
            ("distclean-local" function nil nil [9030 9077]))          
    :file "Makefile.am"
    :pointmax 9077
    :fsize 9076
    :lastmodtime '(21022 63839 0 0)
    :unmatched-syntax '((shell-command 9048 . 9076) (bol 9047 . 9047))
    )
   )
  :file "!home!work!git!mm!mysql-proxy-0.8.2!tests!unit!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
